Podemos usar DetailView para fazer a class basedview do page e post.
DetailView você vê apenas 1 coisa na tela.

class PageDetailView(DetailView):
    model = Page
    template_name = 'blog/pages/page.html'
    slug_field = 'slug'
    context_object_name = 'page'

    def get_context_data(self, **kwargs):
        ctx = super().get_context_data(**kwargs)

        page = self.get_object()
        page_title = f'Página {page.title} - '  # type:ignore
        ctx.update({
            'page_title': page_title
        })
        return ctx

O detailview é bem mais simples que o listview, aqui é possível ver que usamos slug
field, context_object_name, e model. Claro que ao invés de usarmos isso poderíamos
usar o "queryset".

get_object seria a mesma coisa que o próprio page.
E para filtrar apenas os valures com "is_published=True";

    def get_queryset(self):
        return super().get_queryset().filter(is_published=True)

Só usar o get_queryset.