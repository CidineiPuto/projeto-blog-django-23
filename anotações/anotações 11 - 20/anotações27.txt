Agora vamos adicionar o summernote.
Vamos utilizar algo chamado "django summernote"

https://github.com/summernote/django-summernote

Aqui terá uma explicação de como instalar ele, vamos começar com;

pip install django-summernote
Vamos pegar o django-summernote pelo pip freeze.

E colocar a versão do mesmo dentro do requirements.txt.

django-summernote>=0.8.20.0,<0.8.21

Agora, vamos usar o 

docker-compose up --build

Ou pode fazer;

docker-compose up --build --remove-orphans --renew-anon-volumes --force-recreate

Após instalado, vamos no project/settings, em installed_apps e adicionar o django
summernote
Vamos incluir o summernote no url patterns do projeto no urls.py.

Tem que alterar no media root também, que já está feita no settings.

MEDIA_URL = '/media/'
MEDIA_ROOT = DATA_DIR / 'media'

Podemos colocar o summernote em todos se quisermos.

Agora, lá na admin de onde vamos querer usar o sumernote que será no blog.
primeiro vamos importar ele;

from django_summernote.admin import SummernoteModelAdmin

O PostAdmin vai herdar do SummernoteModelAdmin
Agora vamos colocar quais campos irá usar summernote fields.

Se quiser configurar uma certa estilização para o "code mirror" use esta como palavra
chave, exemplo;

cdn codemirror dracula theme

E vamos colocar isso no settings.py;

SUMMERNOTE_CONFIG = {
    'summernote': {
        # Toolbar customization
        # https://summernote.org/deep-dive/#custom-toolbar-popover
        'toolbar': [
            ['style', ['style', ]],
            ['font', ['bold', 'italic', 'clear']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph', 'hr', ]],
            ['table', ['table']],
            ['insert', ['link', 'picture']],
            ['view', ['fullscreen', 'codeview', 'undo', 'redo']],
        ],
        'codemirror': {
            'mode': 'htmlmixed',
            'lineNumbers': 'true',
            'lineWrapping': 'true',
            'theme': 'dracula',
        },
    },
    'css': (
        '//cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/theme/dracula.min.css',
    ),
    'attachment_filesize_limit': 30 * 1024 * 1024,
    'attachment_model': 'blog.PostAttachment',
}

Toolbar no caso é a barra superior de ferramentas, e o codemirror, é o próprio code
mirror.

Estamos com um model de imagens no summernote, que é o que estamos usando por enquanto
porém, iremos criar um outro.

Em venv/lib/django_summernote irá ter a configuração do summernote em si.

Vamos importar o "abstract method" para criarmos nossa própria classe a partir desta.

E por enquanto vamos fazer isto no models do blog;

from django_summernote.models import AbstractAttachment

class PostAttachment(AbstractAttachment):
    def save(self, *args, **kwargs):
        if not self.name:
            self.name = self.file.name
        super().save(*args, **kwargs)

Depois de certificar se funciona, só fazer isto;

class PostAttachment(AbstractAttachment):
    def save(self, *args, **kwargs):
        if not self.name:
            self.name = self.file.name
        current_file_name = str(self.file.name)
        super_save = super().save(*args, **kwargs)
        file_changed = False

        if self.file:
            file_changed = current_file_name != self.file.name

        if file_changed:
            resize_image(self.file, 900, True, 70)

        return super_save

E se quisermos podemos colocar o summernote field no page também.
Isso no admin